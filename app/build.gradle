plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'jacoco'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: "kotlin-parcelize"

jacoco {
    toolVersion = "0.8.7"
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.shineshiao.endeavour"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

    flavorDimensions "mode"

    productFlavors {
        dev {
            dimension "mode"
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Simple Endeavour Dev"
            buildConfigField "String", "API_BASE_URL", "\"https://run.mocky.io/v3/\""
            buildConfigField "String", "ENDPOINT_PRODUCT_LIST", "\"2f06b453-8375-43cf-861a-06e95a951328\""
            buildConfigField "Integer", "LOADER_EXPIRED_TIME", "30"
            buildConfigField "String", "API_CONTENT_TYPE", "\"application/content-type;charset=UTF-8\""
            buildConfigField "String", "SHARED_PREFERENCE_FILE_NAME", "\"SIMPLE_ENDEAVOUR_DEV_PREFs\""
        }
        production {
            dimension "mode"
            applicationIdSuffix ".pro"
            resValue "string", "app_name", "Simple Endeavor"
            buildConfigField "String", "API_BASE_URL", "\"https://run.mocky.io/v3/\""
            buildConfigField "String", "ENDPOINT_PRODUCT_LIST", "\"2f06b453-8375-43cf-861a-06e95a951328\""
            buildConfigField "Integer", "LOADER_EXPIRED_TIME", "30"
            buildConfigField "String", "API_CONTENT_TYPE", "\"application/content-type;charset=UTF-8\""
            buildConfigField "String", "SHARED_PREFERENCE_FILE_NAME", "\"SIMPLE_ENDEAVOUR_PROD_PREFs\""
        }
    }

}

dependencies {
    final corektx_version = "1.2.0"
    final viewmodelktx_version = "2.4.1"
    final fragmentktx_version = "1.2.2"
    final retrofit_version = "2.9.0"
    final okhttp3_version = "4.7.2"
    final lottie_version = "3.7.0"
    final dagger_hilt_version = "2.38.1"
    final coilVersion = "1.3.2"
    final coroutines_version = "1.5.1"
    final livedata_version = '2.4.1'
    final room_version = "2.3.0"
    final recycler_version = "1.2.1"
    final powermock_version = "2.0.9"
    final nav_version = "2.3.5"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.core:core-ktx:$corektx_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodelktx_version"
    implementation "androidx.fragment:fragment-ktx:$fragmentktx_version"
    implementation 'androidx.multidex:multidex:2.0.0'

    //UI
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    //implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    //lottie
    implementation "com.airbnb.android:lottie:$lottie_version"

    //Hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation("androidx.room:room-ktx:$room_version")
    kapt "androidx.room:room-compiler:$room_version"

    //Navigation Kotlin language implementation
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")


    //for image rendering
    implementation "io.coil-kt:coil:$coilVersion"

    // For instrumentation tests
    kaptAndroidTest "com.google.dagger:hilt-compiler:$dagger_hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    androidTestImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "org.powermock:powermock-module-junit4:$powermock_version"
    androidTestImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"

    testImplementation 'junit:junit:4.+'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.powermock:powermock-module-junit4:$powermock_version"
    testImplementation "org.powermock:powermock-api-mockito2:$powermock_version"
    testImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
}